@model Students_Attendance_Project.Models.FilterModel
@using Students_Attendance_Project.Models;
@using PagedList.Mvc;
@using PagedList;
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "อาคารเรียน";
}

<section>
    <div class="row">
        <div class="col-sm-2"></div>
        <div class="col-sm-8">
            <div class="panel panel-primary">
                <div class="box-header">
                    <div class="box-header">
                        <div class="caption">
                            <i class="fa fa-cogs"></i> &nbsp;<strong style="font-size: 16px; ">ข้อมูลอาคารเรียน</strong>
                            @*<a href="@Url.Action("CreateUser","Admin")" class="btn btn-primary btn-sm pull-right" role="button">เพิ่ม</a>*@

                            <button type="button" class="btn btn-primary btn-sm pull-right btn-addbuilding"><i class="fa fa-plus"></i>&nbsp;เพิ่มอาคารเรียน</button>
                        </div>
                        <p>
                            <hr />
                        </p>
                        <div class="row">
                            <div class="col-sm-6 pull-right">
                                <form id="form-search" action="" class="form-horizontal" method="post" enctype="multipart/form-data">
                                    <div class="input-group">
                                        <input type="text" name="Query" class="form-control" placeholder="ค้นหา..">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default btn-search" type="submit"><i class="fa fa-search"></i></button>
                                        </span>
                                    </div>
                                </form>
                            </div>
                            @*<div class="col-sm-6 pull-left">
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <select class="form-control" id="Building1" name="Building1" tabindex="1">
                                                @{
                                                    var BuildingEntity = (List<BuildingModel>)ViewBag.Building;
                                                    if (BuildingEntity.Count > 0 && BuildingEntity != null)
                                                    {
                                                        <option value="0">-- ทั้งหมด --</option>
                                                        foreach (var r in BuildingEntity)
                                                        {
                                                            <option value="@r.BuildingCode">@r.BuildingCode | @r.BuildingName</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>

                                    </div>
                                </div>*@
                        </div>

                    </div>
                    <div class="portlet-body">
                        <!-- Teble-->
                        <div class="table-scrollable">
                            <table class="table table-bordered table-hover text-center" id="Building-table">
                                <thead>
                                    <tr class="success">
                                        <th style="width: 20%;"> อาคาร</th>
                                        <th> ชื่ออาคาร </th>
                                        @*<th> ห้องเรียน </th>*@
                                        <th style="width: 10%;">  </th>
                                    </tr>
                                </thead>
                                <tbody class="text-left">
                                    @{
                                        var entity = (PagedList.IPagedList<BuildingModel>)ViewBag.Building;
                                        if (entity.Count > 0 && entity != null)
                                        {
                                            int line = 0;
                                            foreach (var r in entity)
                                            {
                                                <tr class="@(line % 2 != 0 ? "info":"")">
                                                    <td>@r.BuildingCode</td>
                                                    <td style="text-align:left;">@r.BuildingName</td>
                                                    @*<td><a href="@Url.Action("Room","Admin", new { id = r.BuildingCode })">ห้องเรียน</a></td>*@
                                                    <td>
                                                        <button type="button" class="btn btn-warning btn-xs btn-edit" data-buildingid="@r.BuildingCode" role="button" data-toggle="tooltip" data-placement="top" title="แก้ไข"><i class="fa fa-pencil"></i></button>
                                                    </td>
                                                </tr>
                                                line++;
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="row pull-right" style="margin-right:2px;">
                            @Html.PagedListPager((IPagedList)ViewBag.Building, page => Url.Action("Building", new { page, Model.Query }))
                        </div>
                        <!-- table-->
                        <!-- modal User-->
                        <form id="Building-form" class="form-horizontal">
                            <div class="modal fade" id="BuildingModal" role="dialog">
                                <div class="modal-dialog">
                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">อาคารเรียน</h4>
                                        </div>
                                        <div class="modal-body ">

                                            <input type="hidden" name="NewBuilding" id="NewBuilding" value="1">

                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">หมายเลขอาคาร :<span class="isRed"> *</span></label>
                                                <div class="col-sm-3">
                                                    <input type="text" class="form-control" id="BuildingCode" name="BuildingCode" tabindex="1"
                                                           maxlength="4" minlength="1" required onkeyup="isNumber(this.value, this)" onblur="CheckBuildingCode()">
                                                    <div id="isBuildingCode" style="padding-top: 3px;"></div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-sm-4 control-label">ชื่ออาคาร :<span class="isRed"> *</span></label>
                                                <div class="col-sm-7">
                                                    <input type="text" class="form-control" id="BuildingName" name="BuildingName" tabindex="2" required>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default pull-left" data-dismiss="modal">ยกเลิก</button>
                                            <button type="button" class="btn btn-success pull-right btn-save" data-dismiss="modal">บันทึกข้อมูล</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>

                        <!-- modal CreateUser-->
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-2"></div>
    </div>
</section>
@section scripts{
    <script>

        $('#Building-form').validate({
            rules: {
                BuildingCode: { required: true },
                BuildingName: { required: true }

            },
            messages: {
                BuildingCode: "กรุณาป้อนหมายเลขอาคาร",
                BuildingName: "กรุณาป้อนชื่ออาคาร",
            },
        });

        function isNumber(sText, obj) {
            var ValidChars = "1234567890A-";
            var IsNumber = true;
            var Char;
            for (i = 0; i < sText.length && IsNumber == true; i++) {
                Char = sText.charAt(i);
                if (ValidChars.indexOf(Char) == -1) {
                    IsNumber = false;
                }
            }
            if (IsNumber == false) {
                obj.value = sText.substr(0, sText.length - 1);
            }
        }

        function ResetModal() {
            $('#isBuildingCode').html("");
            $('#Building-form').find('.form-group').find('label.error').remove();
            $('#Building-form').find('.form-group').find('.error').removeClass('error');
            $('#Building-form').find('.form-group').find('.valid').removeClass('valid');
        }

        $('.btn-addbuilding').click(function () {
            $('#Building-form').find("input").val("");
            ResetModal();
            $('#BuildingModal').modal('show');
            $('#BuildingCode').attr("readonly", false);
            $('#BuildingCode').attr("onblur", "CheckBuildingCode()");

        });
        var isBuilding = false;
        function CheckBuildingCode() {
            var buildingcode = $('#BuildingCode').val();
            //alert(buildingcode);
            if (buildingcode != "") {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("CheckBuildingCode", "Admin")',
                    dataType: "json",
                    data: { _id: buildingcode },
                    traditional: true,
                    beforeSend: function () {
                        loadSpin();
                    },
                    success: function (res) {
                        var status = false;
                        var message = 'ดำเนินการไม่สำเร็จ';
                        if (res != null && res != undefined) {
                            status = res.status;
                            message = res.message;
                        }
                        if (status == false) {
                            isBuilding = false;
                            $('#isBuildingCode').html(buildingcode + " มีแล้ว กรุณาป้อนใหม่").addClass("isRed");
                            $('#Building-form').find('.form-group').find('#BuildingCode').removeClass('valid').addClass('error');
                        }
                        else {
                            isBuilding = true;
                            $('#isBuildingCode').html("");
                            $('#Building-form').find('.form-group').find('#BuildingCode').removeClass('error').addClass('valid');
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        swal("เกิดข้อผิดพลาด", message, "error");
                        unLoadSpin();
                    },
                    complete: function () {
                        unLoadSpin();
                    }
                });
            }
            else {
                isBuilding = false;
                $('#isBuildingCode').html("");
                $('#Building-form').find('.form-group').find('#BuildingCode').addClass('error').removeClass('valid');
            }
        }

        $(document).ready(function () {
            $('.sidebar-menu > li').removeClass('active');
            $('.basicMenu').addClass('active');
            $('.basicMenu > ul > .Building').addClass('active');

            $('.btn-save').click(function () {
                //fileValidate();
                if ($('#Building-form').valid() && isBuilding == true) {
                    $.ajax({
                        type: "POST", // method ที่จะส่ง
                        cache: false,
                        url: '@Url.Action("SaveBuilding", "Admin")',  // ส่งไปให้ที่ได้ ระบุ
                        dataType: "json", // ชนิดข้อมูลที่ส่ง
                        data: $('#Building-form').serialize(), // ข้อมูลที่ส่ง
                        traditional: true, // การจดจำข้อมูล
                        beforeSend: function () { // ก่องส่ง data จะให้ทำไร
                            loadSpin();
                        },

                        success: function (res) {

                            var status = false;
                            var message = 'ดำเนินการไม่สำเร็จ';
                            if (res != null && res != undefined) {
                                status = res.status;
                                //message = res.message != '' ? res.message : message;
                            }
                            if (status == false ) {
                                swal("เกิดข้อผิดพลาด", res.message, "error");
                            }
                            else {
                                swal({
                                    title: "บันทึกข้อมูลเรียบร้อยเเล้ว",
                                    type: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                    closeOnConfirm: false
                                },
                                    function () {
                                        location.reload(true);
                                    });
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            swal("เกิดข้อผิดพลาด", message, "error");
                            unLoadSpin();
                        },
                        complete: function () {
                            unLoadSpin();
                        },
                    });
                }
                return false;
            });

            $('.btn-edit').click(function () {
                isBuilding = true;
                var buildingid = $(this).data("buildingid");
                $.ajax({
                    type: "POST", // method ที่จะส่ง
                    cache: false,
                    url: '@Url.Action("UpdateBuilding", "Admin")',  // ส่งไปให้ที่ได้ ระบุ
                    dataType: "json", // ชนิดข้อมูลที่ส่ง
                    data: { _id: buildingid }, // ข้อมูลที่ส่ง
                    traditional: true, // การจดจำข้อมูล
                    beforeSend: function () { // ก่องส่ง data จะให้ทำไร
                        loadSpin();
                    },
                    success: function (res) {

                        var status = false;
                        var message = 'ดำเนินการไม่สำเร็จ';
                        if (res != null && res != undefined) {
                            status = res.status;
                            message = res.message != '' ? res.message : message;
                        }
                        if (status == false) {
                            swal("เกิดข้อผิดพลาด", message, "error");

                        } else {
                            $('#BuildingCode').val(res.data.BuildingCode);
                            $('#BuildingName').val(res.data.BuildingName);
                            ResetModal();
                            $('#BuildingModal').modal('show');
                            $('#BuildingCode').attr("readonly", true);
                            $('#BuildingCode').attr("onblur", null);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        swal("เกิดข้อผิดพลาด", message, "error");
                        unLoadSpin();
                    },
                    complete: function () {
                        unLoadSpin();
                    }
                });
            });
        });
    </script>
}
